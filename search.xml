<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[装好虚拟机需要做~]]></title>
    <url>%2Fliysuzy%2F2018%2F10%2F24%2F%E8%A3%85%E5%A5%BD%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9C%80%E8%A6%81%E5%81%9A%E7%9A%84%2F</url>
    <content type="text"><![CDATA[Virtual Box一、 增强功能1. 增强功能的作用 实现客户机和主机间的鼠标平滑移动 安装虚拟显卡驱动，实现2D和3D视频图形加速，自动调整客户机分辨率 与主机共享剪贴板的内容，也就是说直接可以在主机、客户机之间复制、粘贴（不支持文件） 与主机实现文件共享（共享文件夹） 等等…… 2. 安装增强功能 ① 进入系统 ② 点击菜单“设备”，点击下拉菜单“安装增强功能”。 ③ 弹出对话框，点击运行，会弹出输入密码对话框，输入即可。 ④ 安装程序自动安装，直到出现“Press Return to close this window…”，按回车结束，重启系统即可。 ⑤ 除此之外，需要开启共享剪切板才可以在主机和虚拟机之间复制剪贴板内容。 装完增强功能后，ubuntu关机时千万不要强制关机，要按正常步骤关机，否则增强功能可能会消失 3. 共享文件夹注意：共享文件夹的前提是安装增强功能！ ① 设定共享文件夹。点击菜单“设备”，点击下拉菜单“共享文件夹”，点击右侧菜单“共享文件夹”。 ② 点击右侧加号，选择一个文件夹share，选择后点击自动挂载，固定分配。 ③ 打开命令行，需要输入以下命令 进入/mnt： cd /mnt 创建gongxiang目录： sudo mkdir gongxiang 将“share”目录与“gongxiang”目录进行关联： sudo mount -t vboxsf share /mnt/gongxiang ④ 重启系统，现在我们可以在文件资源管理器中看到该文件夹，但是打开会报错 这时候我们需要获取权限，把本机用户加入到vboxsf之中 sudo adduser liysuzy vboxsf ⑤ 再次重启系统，以后就可以在共享文件夹下操作了！]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Virtual Box</tag>
        <tag>Ubuntu</tag>
        <tag>增强功能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[词法分析器 C++实现]]></title>
    <url>%2Fliysuzy%2F2018%2F10%2F22%2F%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8%2F</url>
    <content type="text"><![CDATA[一、 词法分析做什么词法分析是编译器的第一个步骤。 教材定义：词法分析器读入组成源程序的字符流， 并且将它们组织成为有意义的词素(lexeme)的序列。对于每个词素，词法分析器产生如下形式的词法单元(token)作为输出:&lt;token-name, attribute-value&gt; 词法分析器做的任务就是将源程序进行分解为以下五类单词“标识符，关键字，常数，运算符，界符” 二、 词法分析器（简易）实现整个程序流程： 对代码进行预处理，消除注释（单行、多行），目的是让词法分析时不进行过量的超前搜索与回退，以及减少判断注释时的内存消耗。将消除注释的代码存入另一个文件，为词法分析做准备。 读取不含注释的文件，进行单词的识别。每识别一个单词，需要向屏幕输出此法单元&lt;token-name, attribute-value&gt; 注解 将所有关键字、单目运算符、双目运算符、界符分别存放到数组中。 预处理————消除注释 C语言注释：// 单行注释 /* 多行注释 */ “/“出现时有几种情况：“除号”，“单行注释”，“多行注释”，“字符串内的字符常量” 因此需要对这几种情况进行判断。于是采用了编译原理中常用的————自动状态机 当然，这个程序中的状态机并不是严格按照状态机的定义来设计的，仅仅可以进行以上情况的判断。 状态机如下图： 使用状态机的好处: 避免了引号内有注释符号而被识别为注释的情况 可以查找注释不闭合与引号不闭合错误。因为如果读到文件终结时3状态或者5状态，都代表等待下一个/或者“的输入，也就是没有与上一个相匹配的字符。 内存开销小 预处理————文件读取 由于预处理无需进行超前搜索与回退，因此按字符读取是最节省空间与内存的。 词法分析————单词的识别 单词识别优先级： 字母&amp;数字====&gt;状态机外字符（运算符与部分分界符）====&gt;状态机内字符（需要进行状态转换） 但是这样识别会产生一个问题：引号内的字符会被视为标识符，甚至中文是乱码。 于是我考虑优先识别引号。 ① 如果识别到第一个引号，将阻塞后续字符的判断，因为代表这是在一个字符串内，不需要判断是否为标识符、关键字等，直到第二个引号进入，才停止阻塞。可以使用“模二求余”判断引号的单双数。 ② 遇到空格、Tab和回车跳过。 ③ 判断是否是字母或数字或下划线，如果是 是字母或下划线，表示是关键字或标识符，依次进行判断。 是数字开头，判断是否是合法数字。如果合法，是浮点数还是整数，依次进行判断。 ④ 判断是否是运算符 超前搜索一位，依次判断是否是双目运算符、单目运算符、界符。 至此，词法分析基本结束。 三、 词法分析器（简易）代码 https://coding.net/u/liysuzy/p/Compilers/git包含源代码与测试用例，如果测试出现问题，可以联系1121899707@163.com，方便我完善程序。 （很不巧的是，做该项目github竟然无法访问！只好放在Coding.net了）]]></content>
      <categories>
        <category>实验</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C</tag>
        <tag>编译原理</tag>
        <tag>词法分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git基础]]></title>
    <url>%2Fliysuzy%2F2018%2F10%2F14%2FGit%20%E5%9F%BA%E7%A1%80%20%2F</url>
    <content type="text"><![CDATA[一、Git简介 分布式版本控制系统 版本控制系统 本地： 他人无法得知工作集中式：一旦服务器存在问题则丢失分布式：服务器、本地均保存版本服务信息，若中央服务器存在问题，任意一台电脑均可以作为服务器。 二、 Git工作流程1、 版本库 Remote Repository 远端版本库 Local Repository 本地 Staging 暂存，即将更新成为下一个版本，也有可能不会成为下一个版本 Working Directory 版本库的本地检出，即电脑可以看到的文件 2. git config12git config --global user name &quot;user&quot;git config --global user email &quot;xxx@gmail.com&quot; 提交版本信息。 邮箱：共享工作成果，方便联系 用户名：提交用户 3. git clonegit clone repo [directory] repo: url directory: 可选本地目录， 未指定为与远端相同 已有远端仓库clone到本地 clone 后 .git 目录： 存放相关版本信息 下面以Coding.net为远端版本库为例： 现在有一个已经创建好的版本库：我们来clone一下。 相应目录下Clone了这一个项目。 4. git initgit init repo e.g. git init test 创建一个本地版本库 生成.git目录 直接创建本地git仓库，不需要有远端仓库 5. git status 查看工作区和暂存区的文件状态 那些被创建、修改……的文件 修改了README.md，添加了一个新文件test.txt，并加入内容。此时仅仅存放在工作区，尚未添加到暂存区中。 6. git addgit add [-A] &lt;file&gt; e.g. git add -Ae.g. git add file 添加文件从工作区到暂存区 A: All 暂存工作区成果等待提交 添加test.txt到暂存区，文件变成了带“+”的（因为我装了可视化界面Tortoise），此时已经加入暂存区。 下面使用另一个命令 7. git diffgit diff 查看工作区改动 git diff --cached 查看暂存区改动 与 git status 的区别 gti diff 比 git status 更详细, 便于寻找改动，进行检查。 此时查看工作区改动，没有任何显示。因为此时工作区中没有任何文件。 查看暂存区改动，显示较为详细。注意：是–cached，两个“-”号 8. git commitgit commit -m &quot;提交注释&quot; 让暂存区的文件真正变为下一个版本 注释为本次修改的内容梗概 9. git log 查看提交历史 git log 显示提交的用户名、邮箱、日期等，详细显示 git log --oneline 日志大纲，粗略显示 git log --oneline --graph 拓扑图展示 git log --oneline --reverse 逆向显示日志信息，时间正序来排列 10. git reset HEAD 游标： 当前活跃分支的游标 改变本地版本库 git reset --soft commit-id commit-id为错误commit之前的，即HEAD之前的任何一次commit 工作区、暂存区内容均不变，只改变本地版本库 回退到倒数第二次提交，将最后一次提交放入暂存区，即commit的反向操作 git reset --mixed commit-id 工作区不变、暂存区改变，是 git reset 的默认命令。 文件从暂存区删除，回到工作区，只是未被加入暂存区的一个状态。 git reset --hard commit-id 工作区、暂存区均改变 文件从工作区、暂存区删除，丢弃更改。 git reset --soft commit-id ：commit的逆向操作，由已经commit状态变成未commit状态。 git reset --mixed commit-id ：变成未添加状态，即删除了在暂存区中的文件，但是工作区的文件没有更改。 git reset --hard commit-id ：工作区文件也被删除。 11. git rmgit rm &lt;file&gt; 从工作区和暂存区删除文件 git rm -f 强制删除 git rm --cached 从跟踪清单(暂存状态)中删除，文件仍然在目录中，在工作区中是一个未被跟踪的状态。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阴阳师式神语音查询——SSM]]></title>
    <url>%2Fliysuzy%2F2018%2F09%2F11%2F2018-09-11-%E9%98%B4%E9%98%B3%E5%B8%88%E5%BC%8F%E7%A5%9E%E8%AF%AD%E9%9F%B3%E6%9F%A5%E8%AF%A2%E2%80%94%E2%80%94SSM%2F</url>
    <content type="text"><![CDATA[一、需求我非常喜欢阴阳师这款游戏，因为它精美的画面、建模、音乐，因为有许多重磅声优的加入，因为它玩法独特…… 然而由于式神说的都是日语，大多数时候我们并听不懂他们说的什么。NGA阴阳师论坛有每个式神的语音翻译，但是找起来太麻烦，因此我萌生了一个想法，写一个查询网站来显示每个式神的台词以及翻译，这样不久方便多了吗！ 去大连实训对SSM框架有了一定的了解，因此我仍然使用SSM框架。 二、数据库设计阴阳师台词可以分为几类：点击、出场、受击、死亡、技能1、技能2、技能3几类。而每个类别下又可能有多条语音。我先列出了必需的字段： 式神名称 式神稀有度 声优 语音类型 日语语音 中文语音 面灵气 SSR 花泽香菜 点击1 XXXX XXXX 为了使数据库满足第三范式，我又对其进行了拆分与细化。 式神表 字段：式神ID、式神名称中文、式神名称英文、式神稀有度【外键】、式神CV【外键】 稀有度表 字段：稀有度ID、稀有度 CV表 字段：CV ID、CV姓名、CV国籍 语音表 字段：语音ID、式神ID【外键】、日文语音、中文语音、罗马语音、语音类型【外键】、语音音频地址 语音类型表 字段：语音类型ID、语音类型、觉醒前后 三、网页设计原本想使用`bootstrap`做这个网站，但是`bootstrap`太过于传统商务。因此我使用了基于`bootstrap`的CSS框架`Flat-UI` （实际上只是用了这个CSS框架的响应式布局与按钮组件，2333333） 核心功能是显示语音台词，因此要醒目。于是我采取了如下图的一种设计。]]></content>
      <categories>
        <category>工程</category>
      </categories>
      <tags>
        <tag>WEB</tag>
        <tag>SSM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[旋转木马]]></title>
    <url>%2Fliysuzy%2F2018%2F08%2F24%2F%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%2F</url>
    <content type="text"><![CDATA[追いかけて今日も歩き続ける 『僕にできること』 初这是我的第一首原创歌曲《旋转木马》φ(゜▽゜*)♪ 故事灵感来源： 同学放假回家，自己暂时呆在学校的失落。 灵感迸发： 欣赏了国家大剧院的《2011年无忧宫长笛音乐会》。 主旋： 采用和声小调式。 乐器选择： 主旋使用长笛，“笛”在中国古代多代表一种悲凉凄切的情感（西方长笛与中国“笛”不同，但音色仍然可以表达凄凉的情感）。长笛在交响乐队中常担任主要旋律，因此我选择长笛作为主旋乐器。[Native Instruments Kontakt Factory Library / Flute] 主歌的后部分与副歌使用长笛作为伴奏部分，但是演奏的仍然是主旋的变奏。 主歌的后部分与副歌使用弦乐作为旋律的演奏乐器，钢琴作为伴奏。弦乐使用的是以大提琴为主的音色，更浑厚、凄切，钢琴则演奏琶音与和声，二者相辅相成。 旋律设定： 开场即是主旋，而且一连演奏三遍，有人对我说是不是太多余，我认为是刚刚好吧，因此没有删掉一部分。三遍是循序渐进加入乐器，而且每一遍乐器的演奏风格是不同的，就使这种重复感降低。 副歌部分是主旋和弦的变奏，钢琴演奏的是主旋的变奏，而弦乐演奏的是主旋的底音，当然也有所变化。副歌结束后是一段钢琴的solo，渐强渐快。进入变奏。 变奏转换情感，激昂欢快，速度提升至170-180，其实这一段就是一段圆舞曲，可以想象…… 故事描述：说了这些其实一听就可以感觉出来，其实上面的这些都是与故事相对应的……描绘几个场景 =￣ω￣= 王子与公主濒死 王子与公主展开回忆 王子幼时即被王后迫害 一位小女孩的到来让王子有了开心的生活 恶毒的王后要拆散王子与小女孩 王子与小女孩与王后斗智斗勇 悲剧 听起来似乎很幼稚，但是是一种理解。 本意是什么呢？(+_+)? 还是埋藏心底吧！ 分享：《SKY’s the limit》 楽しことばっかりの 人生なんかじゃないけど じゃあせめて今だけ 彩って夢見せて —-《SKY’s the limit》 虽然生活并非都事事顺心令人愉悦，但是那也至少在此刻，染上希望实现梦想 。 Being alive, being vivid.]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>杂文</tag>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[建站第一天！纪念一下]]></title>
    <url>%2Fliysuzy%2F2018%2F08%2F23%2Ffirst-day%2F</url>
    <content type="text"><![CDATA[不说啥了，开始工作！！！]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>杂文</tag>
      </tags>
  </entry>
</search>
